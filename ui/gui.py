"""
GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∏–≥—Ä—ã "–¢–æ—Ä–≥–æ–≤—ã–π –¥–æ–º" - –î—Ä–µ–≤–Ω–∏–π –†–∏–º
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç customtkinter —Å –∞–Ω—Ç–∏—á–Ω–æ–π —Ä–∏–º—Å–∫–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π
"""

import customtkinter as ctk
import sys
import os
from typing import Optional

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from core.world import load_balance_config, generate_world
from core.goods import load_goods
from models.player import Player
from models.courier import Courier
from models.wagon import Wagon
from core.game import Game
from screens.difficulty_screen import DifficultyScreen, RomanTheme

__all__ = ['TradingHouseGUI', 'RomanTheme']


class TradingHouseGUI:
    """–ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    def __init__(self):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã customtkinter
        ctk.set_appearance_mode("light")
        ctk.set_default_color_theme("blue")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        self.root = ctk.CTk()
        self.root.title("üèõÔ∏è –¢–æ—Ä–≥–æ–≤—ã–π –î–æ–º - –î—Ä–µ–≤–Ω–∏–π –†–∏–º")
        self.root.geometry("1920x1080")
        self.root.configure(fg_color=RomanTheme.BACKGROUND)
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
        self.center_window()
        
        # –ò–≥—Ä–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã
        self.game: Optional[Game] = None
        self.current_frame: Optional[ctk.CTkFrame] = None
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
        self.create_start_screen()
    
    def center_window(self):
        """–¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ"""
        self.root.update_idletasks()
        width = 1920
        height = 1080
        x = (self.root.winfo_screenwidth() // 2) - (width // 2)
        y = (self.root.winfo_screenheight() // 2) - (height // 2)
        self.root.geometry(f"{width}x{height}+{x}+{y}")
    
    def clear_screen(self):
        """–û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ñ—Ä–µ–π–º–∞"""
        if self.current_frame:
            self.current_frame.destroy()
            self.current_frame = None
    
    def create_start_screen(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞"""
        self.clear_screen()
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
        main_frame = ctk.CTkFrame(
            self.root,
            fg_color=RomanTheme.BACKGROUND,
            corner_radius=0
        )
        main_frame.pack(fill="both", expand=True, padx=20, pady=20)
        self.current_frame = main_frame
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–≥—Ä—ã
        title_label = ctk.CTkLabel(
            main_frame,
            text="üèõÔ∏è –¢–û–†–ì–û–í–´–ô –î–û–ú üèõÔ∏è",
            font=RomanTheme.FONT_TITLE,
            text_color=RomanTheme.ACCENT
        )
        title_label.pack(pady=(50, 20))
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle_label = ctk.CTkLabel(
            main_frame,
            text="–î—Ä–µ–≤–Ω–∏–π –†–∏–º ‚Ä¢ –¢–æ—Ä–≥–æ–≤–∞—è –ò–º–ø–µ—Ä–∏—è",
            font=RomanTheme.FONT_HEADER,
            text_color=RomanTheme.TEXT
        )
        subtitle_label.pack(pady=(0, 40))
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–µ–∫—Å—Ç–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
        description_frame = ctk.CTkFrame(
            main_frame,
            fg_color=RomanTheme.BACKGROUND,
            border_color=RomanTheme.FRAME_BORDER,
            border_width=3,
            corner_radius=15
        )
        description_frame.pack(pady=30, padx=100, fill="both", expand=True)
        
        description_text = """
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∞–Ω—Ç–∏—á–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏!

–í—ã ‚Äî –≤–ª–∞–¥–µ–ª–µ—Ü —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –¥–æ–º–∞ –≤ –≤–µ–ª–∏–∫–æ–π –†–∏–º—Å–∫–æ–π –∏–º–ø–µ—Ä–∏–∏. 
–í–∞—à–∞ —Ü–µ–ª—å ‚Äî –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ—Ä–≥–æ–≤—É—é –∏–º–ø–µ—Ä–∏—é, –æ—Ç–ø—Ä–∞–≤–ª—è—è –∫–∞—Ä–∞–≤–∞–Ω—ã 
–≤ –¥–∞–ª—å–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, —Ç–æ—Ä–≥—É—è —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –Ω–∞–∫–∞–ø–ª–∏–≤–∞—è 
–±–æ–≥–∞—Ç—Å—Ç–≤–æ.

–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –∫—É—Ä—å–µ—Ä–∞–º–∏, –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã —Å —É–º–æ–º, —É—á–∏—Ç—ã–≤–∞–π—Ç–µ 
—Å–ø—Ä–æ—Å –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –∏ –æ—Å—Ç–µ—Ä–µ–≥–∞–π—Ç–µ—Å—å –æ–ø–∞—Å–Ω–æ—Å—Ç–µ–π –¥–æ—Ä–æ–≥.

–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —Ü–µ–ª–∏ –≤ 10,000 –¥–µ–Ω–∞—Ä–∏–µ–≤ –∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è 
–∏ —Å—Ç–∞–Ω—å—Ç–µ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Ä–æ—Å–∫–æ—à–Ω–æ–π –≤–∏–ª–ª—ã —É –º–æ—Ä—è!

Ave Caesar! Fortuna audaces iuvat!
        """
        
        description_label = ctk.CTkLabel(
            description_frame,
            text=description_text.strip(),
            font=RomanTheme.FONT_TEXT,
            text_color=RomanTheme.TEXT,
            justify="center",
            wraplength=800
        )
        description_label.pack(pady=40, padx=40, expand=True)
        
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"
        start_button = ctk.CTkButton(
            main_frame,
            text="‚öîÔ∏è –ù–ê–ß–ê–¢–¨ –ò–ì–†–£ ‚öîÔ∏è",
            font=RomanTheme.FONT_BUTTON,
            fg_color=RomanTheme.BUTTON,
            hover_color=RomanTheme.BUTTON_HOVER,
            border_color=RomanTheme.FRAME_BORDER,
            border_width=2,
            text_color=RomanTheme.BACKGROUND,
            corner_radius=10,
            width=300,
            height=60,
            command=self.show_difficulty_selection
        )
        start_button.pack(pady=40)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        button_frame = ctk.CTkFrame(
            main_frame,
            fg_color=RomanTheme.BACKGROUND
        )
        button_frame.pack(pady=20)
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        exit_button = ctk.CTkButton(
            button_frame,
            text="–í—ã—Ö–æ–¥",
            font=RomanTheme.FONT_TEXT,
            fg_color=RomanTheme.NEUTRAL,
            hover_color="#999999",
            text_color=RomanTheme.TEXT,
            corner_radius=8,
            width=120,
            height=40,
            command=self.exit_game
        )
        exit_button.pack(side="left", padx=10)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏
        version_label = ctk.CTkLabel(
            main_frame,
            text="–í–µ—Ä—Å–∏—è 1.0 | –ê–Ω—Ç–∏—á–Ω–∞—è –¢–æ—Ä–≥–æ–≤–∞—è –°–∏–º—É–ª—è—Ü–∏—è",
            font=RomanTheme.FONT_SMALL,
            text_color=RomanTheme.NEUTRAL
        )
        version_label.pack(side="bottom", pady=20)
      def show_difficulty_selection(self):
        """–≠–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        self.clear_screen()
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        difficulty_screen = DifficultyScreen(
            parent=self.root,
            on_difficulty_selected=self.start_game,
            on_back=self.create_start_screen
        )
        difficulty_screen.pack(fill="both", expand=True)
        self.current_frame = difficulty_screen
    
    def start_game(self, difficulty: str):
        """–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        try:
            # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            config = self.load_game_config(difficulty)
            
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏—Ä–∞ –∏ —Ç–æ–≤–∞—Ä–æ–≤
            cities = generate_world(config)
            goods = load_goods(config)
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
            player = self.create_player(config, difficulty)
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
            self.game = Game(
                player=player,
                cities=cities,
                goods=goods,
                config=config,
                difficulty=difficulty
            )
            
            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –∏–≥—Ä—ã
            self.show_main_menu()
            
        except Exception as e:
            self.show_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã: {str(e)}")
    
    def load_game_config(self, difficulty: str) -> dict:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–≥—Ä—ã"""
        config_path = "data/balance_config.json"
        if not os.path.exists(config_path):
            config_path = "balance_config.json"
        
        return load_balance_config(path=config_path, difficulty=difficulty)
    
    def create_player(self, config: dict, difficulty: str) -> Player:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ —Å —É—á–µ—Ç–æ–º —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–ª–∞–Ω—Å–∞
        starting_balance = config["player"]["starting_balance"]
        if "difficulty_settings" in config and difficulty in config["difficulty_settings"]:
            settings = config["difficulty_settings"][difficulty]
            starting_balance = int(starting_balance * settings.get("starting_balance_multiplier", 1.0))

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—å–µ—Ä–æ–≤
        couriers = []
        for courier_data in config["player"].get("starting_couriers", []):
            illness_resistance = courier_data.get("illness_resistance", 1.0)
            if "difficulty_settings" in config and difficulty in config["difficulty_settings"]:
                settings = config["difficulty_settings"][difficulty]
                illness_resistance *= settings.get("illness_resistance_multiplier", 1.0)

            couriers.append(Courier(
                name=courier_data["name"],
                endurance=courier_data.get("endurance", 0),
                illness_resistance=illness_resistance
            ))

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–≤–æ–∑–æ–∫
        wagons = [
            Wagon(
                name=wagon_data["name"],
                capacity=wagon_data["capacity"],
                durability=wagon_data.get("durability", 0.75)
            ) for wagon_data in config["player"].get("starting_wagons", [])
        ]

        return Player(
            balance=starting_balance,
            couriers=couriers,
            wagons=wagons
        )
    
    def show_main_menu(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã"""
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã
        # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞
        self.clear_screen()
        
        main_frame = ctk.CTkFrame(
            self.root,
            fg_color=RomanTheme.BACKGROUND,
            corner_radius=0
        )
        main_frame.pack(fill="both", expand=True, padx=20, pady=20)
        self.current_frame = main_frame
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = ctk.CTkLabel(
            main_frame,
            text="üèõÔ∏è –¢–û–†–ì–û–í–´–ô –î–û–ú üèõÔ∏è",
            font=RomanTheme.FONT_TITLE,
            text_color=RomanTheme.ACCENT
        )
        title_label.pack(pady=30)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–≥—Ä–µ
        if self.game:
            info_text = f"""
–¶–∏–∫–ª: {self.game.current_cycle} / {self.game.max_cycles}
–ë–∞–ª–∞–Ω—Å: {self.game.player.balance} –¥–µ–Ω–∞—Ä–∏–µ–≤
–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: {self.game.difficulty.upper()}
            """
            
            info_label = ctk.CTkLabel(
                main_frame,
                text=info_text.strip(),
                font=RomanTheme.FONT_HEADER,
                text_color=RomanTheme.TEXT,
                justify="center"
            )
            info_label.pack(pady=20)
        
        # –ó–∞–≥–ª—É—à–∫–∞ - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –ø–æ–∑–∂–µ
        placeholder_label = ctk.CTkLabel(
            main_frame,
            text="üöß –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üöß\n\n–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º—É —ç–∫—Ä–∞–Ω—É...",
            font=RomanTheme.FONT_TEXT,
            text_color=RomanTheme.TEXT,
            justify="center"
        )
        placeholder_label.pack(pady=50, expand=True)
        
        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        back_button = ctk.CTkButton(
            main_frame,
            text="‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É",
            font=RomanTheme.FONT_TEXT,
            fg_color=RomanTheme.BUTTON,
            hover_color=RomanTheme.BUTTON_HOVER,
            text_color=RomanTheme.BACKGROUND,
            corner_radius=8,
            width=200,
            height=40,
            command=self.create_start_screen
        )
        back_button.pack(pady=20)
    
    def show_error(self, message: str):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        self.clear_screen()
        
        main_frame = ctk.CTkFrame(
            self.root,
            fg_color=RomanTheme.BACKGROUND,
            corner_radius=0
        )
        main_frame.pack(fill="both", expand=True, padx=20, pady=20)
        self.current_frame = main_frame
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—à–∏–±–∫–∏
        error_label = ctk.CTkLabel(
            main_frame,
            text="‚ö†Ô∏è –û–®–ò–ë–ö–ê ‚ö†Ô∏è",
            font=RomanTheme.FONT_TITLE,
            text_color="red"
        )
        error_label.pack(pady=50)
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        message_label = ctk.CTkLabel(
            main_frame,
            text=message,
            font=RomanTheme.FONT_TEXT,
            text_color=RomanTheme.TEXT,
            justify="center",
            wraplength=800
        )
        message_label.pack(pady=30, expand=True)
        
        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        back_button = ctk.CTkButton(
            main_frame,
            text="‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É",
            font=RomanTheme.FONT_TEXT,
            fg_color=RomanTheme.BUTTON,
            hover_color=RomanTheme.BUTTON_HOVER,
            text_color=RomanTheme.BACKGROUND,
            corner_radius=8,
            width=200,
            height=40,
            command=self.create_start_screen
        )
        back_button.pack(pady=20)
    
    def exit_game(self):
        """–í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã"""
        self.root.quit()
        self.root.destroy()
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        try:
            self.root.mainloop()
        except KeyboardInterrupt:
            print("\n–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ GUI: {e}")
        finally:
            try:
                self.root.destroy()
            except:
                pass


if __name__ == "__main__":
    app = TradingHouseGUI()
    app.run()
