"""
GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∏–≥—Ä—ã "–¢–æ—Ä–≥–æ–≤—ã–π –¥–æ–º" - –î—Ä–µ–≤–Ω–∏–π –†–∏–º
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç customtkinter —Å –∞–Ω—Ç–∏—á–Ω–æ–π —Ä–∏–º—Å–∫–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π
"""

import customtkinter as ctk
import sys
import os
from typing import Optional

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from core.world import load_balance_config, generate_world
from core.goods import load_goods
from models.player import Player
from models.courier import Courier
from models.wagon import Wagon
from models.audio import audio_manager
from core.game import Game

# –ò–º–ø–æ—Ä—Ç—ã —ç–∫—Ä–∞–Ω–æ–≤ –∏–∑ –ø–æ–¥–ø–∞–ø–∫–∏ screens
from ui.screens.difficulty_screen import DifficultyScreen, RomanTheme
from ui.screens.main_menu_screen import MainMenuScreen
from ui.screens.shop_inventory_screen import ShopInventoryScreen
from ui.screens.send_caravan_screen import SendCaravanScreen
from ui.screens.cities_overview_screen import CitiesOverviewScreen
from ui.screens.caravans_status_screen import CaravansStatusScreen

__all__ = ['TradingHouseGUI', 'RomanTheme']


class TradingHouseGUI:
    """–ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    def __init__(self):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã customtkinter
        ctk.set_appearance_mode("light")
        ctk.set_default_color_theme("blue")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        self.root = ctk.CTk()
        self.root.title("üèõÔ∏è –¢–æ—Ä–≥–æ–≤—ã–π –î–æ–º - –î—Ä–µ–≤–Ω–∏–π –†–∏–º")
        self.root.geometry("1920x1080")
        self.root.configure(fg_color=RomanTheme.BACKGROUND)
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
        self.center_window()
        
        # –ò–≥—Ä–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã
        self.game: Optional[Game] = None
        self.current_frame: Optional[ctk.CTkFrame] = None
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
        self.create_start_screen()
    
    def center_window(self):
        """–¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ"""
        self.root.update_idletasks()
        width = 1920
        height = 1080
        x = (self.root.winfo_screenwidth() // 2) - (width // 2)
        y = (self.root.winfo_screenheight() // 2) - (height // 2)
        self.root.geometry(f"{width}x{height}+{x}+{y}")
    
    def clear_screen(self):
        """–û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ñ—Ä–µ–π–º–∞"""
        if self.current_frame:
            self.current_frame.destroy()
            self.current_frame = None
    
    def create_start_screen(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞"""
        self.clear_screen()
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
        main_frame = ctk.CTkFrame(
            self.root,
            fg_color=RomanTheme.BACKGROUND,
            corner_radius=0
        )
        main_frame.pack(fill="both", expand=True, padx=20, pady=20)
        self.current_frame = main_frame
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–≥—Ä—ã
        title_label = ctk.CTkLabel(
            main_frame,
            text="üèõÔ∏è –¢–û–†–ì–û–í–´–ô –î–û–ú üèõÔ∏è",
            font=RomanTheme.FONT_TITLE,
            text_color=RomanTheme.ACCENT
        )
        title_label.pack(pady=(50, 20))
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle_label = ctk.CTkLabel(
            main_frame,
            text="–î—Ä–µ–≤–Ω–∏–π –†–∏–º ‚Ä¢ –¢–æ—Ä–≥–æ–≤–∞—è –ò–º–ø–µ—Ä–∏—è",
            font=RomanTheme.FONT_HEADER,
            text_color=RomanTheme.TEXT
        )
        subtitle_label.pack(pady=(0, 40))
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–µ–∫—Å—Ç–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
        description_frame = ctk.CTkFrame(
            main_frame,
            fg_color=RomanTheme.BACKGROUND,
            border_color=RomanTheme.FRAME_BORDER,
            border_width=3,
            corner_radius=15
        )
        description_frame.pack(pady=30, padx=100, fill="both", expand=True)
          # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–ª—å –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 15000)
        config_path = "data/balance_config.json"
        if not os.path.exists(config_path):
            config_path = "balance_config.json"
            
        try:
            import json
            with open(config_path, 'r', encoding='utf-8') as f:
                config_data = json.load(f)
            victory_goal = config_data.get("player", {}).get("victory_goal", 15000)
        except:
            victory_goal = 15000
            
        description_text = f"""
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∞–Ω—Ç–∏—á–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏!

–í—ã ‚Äî –≤–ª–∞–¥–µ–ª–µ—Ü –Ω–µ–±–æ–ª—å—à–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –¥–æ–º–∞ –≤ –≤–µ–ª–∏–∫–æ–π –†–∏–º—Å–∫–æ–π –∏–º–ø–µ—Ä–∏–∏. 
–û–¥–Ω–∞–∫–æ —Å—É–¥—å–±–∞ —Ä–∞—Å–ø–æ—Ä—è–¥–∏–ª–∞—Å—å —Ç–∞–∫, —á—Ç–æ –≤—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ –¥–æ–ª–≥—É –ø–µ—Ä–µ–¥ 
–≤–ª–∏—è—Ç–µ–ª—å–Ω—ã–º –ø–∞—Ç—Ä–∏—Ü–∏–µ–º. –¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ 
–¥–µ–Ω–∞—Ä–∏–µ–≤, —á—Ç–æ–±—ã –≤—ã–ø–ª–∞—Ç–∏—Ç—å –¥–æ–ª–≥ –∏ –≤–µ—Ä–Ω—É—Ç—å —Å–≤–æ—é —á–µ—Å—Ç—å.

–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∫–∞—Ä–∞–≤–∞–Ω—ã –≤ –¥–∞–ª—å–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, —Ç–æ—Ä–≥—É–π—Ç–µ —Ä–µ–¥–∫–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ 
–∏ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–π—Ç–µ –±–æ–≥–∞—Ç—Å—Ç–≤–æ. –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –∫—É—Ä—å–µ—Ä–∞–º–∏, –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã 
—Å —É–º–æ–º, —É—á–∏—Ç—ã–≤–∞–π—Ç–µ —Å–ø—Ä–æ—Å –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –∏ –æ—Å—Ç–µ—Ä–µ–≥–∞–π—Ç–µ—Å—å 
–æ–ø–∞—Å–Ω–æ—Å—Ç–µ–π –¥–æ—Ä–æ–≥.

–°–º–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –¥–æ—Å—Ç–∏—á—å —Ü–µ–ª–∏ –≤ {victory_goal:,} –¥–µ–Ω–∞—Ä–∏–µ–≤ –∑–∞ 
–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∏ –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–∑–æ—Ä–∞? –ò–ª–∏ –≤–∞—Å –∂–¥–µ—Ç —Å—É–¥—å–±–∞ —Ä–∞–±–∞?

Ave Caesar! Fortuna audaces iuvat!
        """
        
        description_label = ctk.CTkLabel(
            description_frame,
            text=description_text.strip(),
            font=RomanTheme.FONT_TEXT,
            text_color=RomanTheme.TEXT,
            justify="center",
            wraplength=800
        )
        description_label.pack(pady=40, padx=40, expand=True)
        
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"
        start_button = ctk.CTkButton(
            main_frame,
            text="‚öîÔ∏è –ù–ê–ß–ê–¢–¨ –ò–ì–†–£ ‚öîÔ∏è",
            font=RomanTheme.FONT_BUTTON,
            fg_color=RomanTheme.BUTTON,
            hover_color=RomanTheme.BUTTON_HOVER,
            border_color=RomanTheme.FRAME_BORDER,
            border_width=2,
            text_color=RomanTheme.BACKGROUND,
            corner_radius=10,
            width=300,
            height=60,
            command=self.show_difficulty_selection
        )
        start_button.pack(pady=40)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        button_frame = ctk.CTkFrame(
            main_frame,
            fg_color=RomanTheme.BACKGROUND
        )
        button_frame.pack(pady=20)
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        exit_button = ctk.CTkButton(
            button_frame,
            text="–í—ã—Ö–æ–¥",
            font=RomanTheme.FONT_TEXT,
            fg_color=RomanTheme.NEUTRAL,
            hover_color="#999999",
            text_color=RomanTheme.TEXT,
                        corner_radius=8,
            width=120,
            height=40,
            command=self.exit_game
        )
        exit_button.pack(side="left", padx=10)
        
        # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—É–¥–∏–æ
        self.create_audio_controls(main_frame)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏
        version_label = ctk.CTkLabel(
            main_frame,
            text="–í–µ—Ä—Å–∏—è 1.0 | –ê–Ω—Ç–∏—á–Ω–∞—è –¢–æ—Ä–≥–æ–≤–∞—è –°–∏–º—É–ª—è—Ü–∏—è",
            font=RomanTheme.FONT_SMALL,
            text_color=RomanTheme.NEUTRAL
        )
        version_label.pack(side="bottom", pady=20)

    def show_difficulty_selection(self):
        """–≠–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        self.clear_screen()
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        difficulty_screen = DifficultyScreen(
            parent=self.root,
            on_difficulty_selected=self.start_game,
            on_back=self.create_start_screen
        )
        difficulty_screen.pack(fill="both", expand=True)
        self.current_frame = difficulty_screen
    
    def start_game(self, difficulty: str):
        """–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        try:
            # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            config = self.load_game_config(difficulty)
            
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏—Ä–∞ –∏ —Ç–æ–≤–∞—Ä–æ–≤
            cities = generate_world(config)
            goods = load_goods(config)
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
            player = self.create_player(config, difficulty)            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
            self.game = Game(
                player=player,
                cities=cities,
                goods=goods,
                config=config,
                difficulty=difficulty
            )
            
            # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –∏–≥—Ä—ã
            self.show_main_menu()
            
        except Exception as e:
            self.show_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã: {str(e)}")
    
    def load_game_config(self, difficulty: str) -> dict:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–≥—Ä—ã"""
        config_path = "data/balance_config.json"
        if not os.path.exists(config_path):
            config_path = "balance_config.json"
        
        return load_balance_config(path=config_path, difficulty=difficulty)
    
    def create_player(self, config: dict, difficulty: str) -> Player:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ —Å —É—á–µ—Ç–æ–º —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–ª–∞–Ω—Å–∞
        starting_balance = config["player"]["starting_balance"]
        if "difficulty_settings" in config and difficulty in config["difficulty_settings"]:
            settings = config["difficulty_settings"][difficulty]
            starting_balance = int(starting_balance * settings.get("starting_balance_multiplier", 1.0))

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—å–µ—Ä–æ–≤
        couriers = []
        for courier_data in config["player"].get("starting_couriers", []):
            illness_resistance = courier_data.get("illness_resistance", 1.0)
            if "difficulty_settings" in config and difficulty in config["difficulty_settings"]:
                settings = config["difficulty_settings"][difficulty]
                illness_resistance *= settings.get("illness_resistance_multiplier", 1.0)

            couriers.append(Courier(
                name=courier_data["name"],
                endurance=courier_data.get("endurance", 0),
                illness_resistance=illness_resistance
            ))        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–≤–æ–∑–æ–∫
        wagons = [
            Wagon(
                name=wagon_data["name"],
                capacity=wagon_data["capacity"],
                durability=wagon_data.get("durability", 0.75)
            ) for wagon_data in config["player"].get("starting_wagons", [])
        ]        # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–∫–∞ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ (–±–∞–ª–∞–Ω—Å - –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç)
        player = Player(starting_balance)
        player.couriers = couriers
        player.wagons = wagons
        
        return player
    
    def show_main_menu(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã"""
        if not self.game:
            self.show_error("–û—à–∏–±–∫–∞: –∏–≥—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return
            
        self.clear_screen()        # –°–æ–∑–¥–∞–µ–º callbacks –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –º–µ–Ω—é
        menu_callbacks = {
            "show_cities": self.show_cities_overview,
            "show_caravans": self.show_caravans_status,
            "send_caravan": self.send_caravan_screen,
            "buy_goods": self.buy_goods_placeholder,
            # "show_inventory": self.show_inventory_placeholder,
            "next_cycle": self.next_cycle_action,
            "quit_game": self.quit_to_start_screen
        }
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        main_menu_screen = MainMenuScreen(
            parent=self.root,
            game=self.game,
            callbacks=menu_callbacks
        )
        main_menu_screen.pack(fill="both", expand=True)
        self.current_frame = main_menu_screen
      # –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –º–µ–Ω—é (–±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –ø–æ–∑–∂–µ)
    def show_cities_overview(self):
        """–≠–∫—Ä–∞–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≥–æ—Ä–æ–¥–æ–≤"""
        if not self.game:
            self.show_error("–û—à–∏–±–∫–∞: –∏–≥—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return
            
        self.clear_screen()
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≥–æ—Ä–æ–¥–æ–≤
        cities_screen = CitiesOverviewScreen(
            parent=self.root,
            game=self.game,
            on_back=self.show_main_menu
        )
        cities_screen.pack(fill="both", expand=True)
        self.current_frame = cities_screen
    def show_caravans_status(self):
        """–≠–∫—Ä–∞–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞—Ä–∞–≤–∞–Ω–æ–≤"""
        if not self.game:
            self.show_error("–û—à–∏–±–∫–∞: –∏–≥—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return
            
        self.clear_screen()
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω —Å—Ç–∞—Ç—É—Å–∞ –∫–∞—Ä–∞–≤–∞–Ω–æ–≤
        caravans_screen = CaravansStatusScreen(
            parent=self.root,
            game=self.game,
            on_back=self.show_main_menu
        )
        caravans_screen.pack(fill="both", expand=True)
        self.current_frame = caravans_screen
    
    def send_caravan_screen(self):
        """–≠–∫—Ä–∞–Ω –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä–∞–≤–∞–Ω–∞"""
        if not self.game:
            self.show_error("–û—à–∏–±–∫–∞: –∏–≥—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return
            
        self.clear_screen()
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä–∞–≤–∞–Ω–∞
        send_caravan_screen = SendCaravanScreen(
            parent=self.root,
            game=self.game,
            on_back=self.show_main_menu
        )
        send_caravan_screen.pack(fill="both", expand=True)
        self.current_frame = send_caravan_screen
    
    def buy_goods_placeholder(self):
        """–≠–∫—Ä–∞–Ω –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤"""
        self.show_shop_inventory()
    
    # def show_inventory_placeholder(self):
    #     """–≠–∫—Ä–∞–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∫–ª–∞–¥–∞ (–æ–±—ä–µ–¥–∏–Ω–µ–Ω —Å –ø–æ–∫—É–ø–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤)"""
    #     self.show_shop_inventory()
    
    def show_shop_inventory(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Å–∫–ª–∞–¥–∞"""
        if not self.game:
            self.show_error("–û—à–∏–±–∫–∞: –∏–≥—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            return
            
        self.clear_screen()        
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —Å–∫–ª–∞–¥–∞
        shop_screen = ShopInventoryScreen(
            parent=self.root,
            game=self.game,
            on_back=self.show_main_menu
        )
        shop_screen.pack(fill="both", expand=True)
        self.current_frame = shop_screen
        
    def next_cycle_action(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ü–∏–∫–ª—É"""
        if not self.game:
            return
            
        self.game.next_cycle()
        self.game.update_caravans()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–∏ –ø–æ–±–µ–¥—ã –∏–ª–∏ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ is_game_over –∏–∑ Game
        if self.game.is_game_over():
            print(f"DEBUG: –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è: –±–∞–ª–∞–Ω—Å {self.game.player.balance} >= —Ü–µ–ª—å {self.game.victory_goal}? {self.game.player.balance >= self.game.victory_goal}")
            print(f"DEBUG: –ò–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ü–∏–∫–ª–∞: —Ç–µ–∫—É—â–∏–π {self.game.current_cycle} > –º–∞–∫—Å–∏–º—É–º {self.game.max_cycles}? {self.game.current_cycle > self.game.max_cycles}")
            self.show_game_over()
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.show_main_menu()
    
    def quit_to_start_screen(self):
        """–í–æ–∑–≤—Ä–∞—Ç –∫ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º—É —ç–∫—Ä–∞–Ω—É"""
        self.game = None
        self.create_start_screen()
    
    def show_placeholder(self, title: str, description: str):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥–ª—É—à–∫—É –¥–ª—è —ç–∫—Ä–∞–Ω–∞"""
        self.clear_screen()
        
        main_frame = ctk.CTkFrame(
            self.root,
            fg_color=RomanTheme.BACKGROUND,
            corner_radius=0
        )
        main_frame.pack(fill="both", expand=True, padx=20, pady=20)
        self.current_frame = main_frame
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = ctk.CTkLabel(
            main_frame,
            text=f"üèõÔ∏è {title.upper()} üèõÔ∏è",
            font=RomanTheme.FONT_TITLE,
            text_color=RomanTheme.ACCENT
        )
        title_label.pack(pady=50)
        
        # –û–ø–∏—Å–∞–Ω–∏–µ
        desc_label = ctk.CTkLabel(
            main_frame,
            text=f"üöß {description} üöß\n\n–≠—Ç–æ—Ç —ç–∫—Ä–∞–Ω –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
            font=RomanTheme.FONT_TEXT,
            text_color=RomanTheme.TEXT,
            justify="center"
        )
        desc_label.pack(pady=30, expand=True)
        
        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        back_button = ctk.CTkButton(
            main_frame,
            text="‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            font=RomanTheme.FONT_TEXT,
            fg_color=RomanTheme.BUTTON,
            hover_color=RomanTheme.BUTTON_HOVER,
            text_color=RomanTheme.BACKGROUND,
            corner_radius=8,
            width=250,
            height=40,
            command=self.show_main_menu
        )        
        back_button.pack(pady=20)
    
    def show_game_over(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã"""
        if not self.game:
            return
            
        self.clear_screen()
        
        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
        main_frame = ctk.CTkFrame(
            self.root,
            fg_color=RomanTheme.BACKGROUND,
            corner_radius=0
        )
        main_frame.pack(fill="both", expand=True)
        self.current_frame = main_frame
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ö–æ–¥–∞
        if self.game.has_won():
            # –ü–û–ë–ï–î–ê
            title = "üèÜ –ü–û–ë–ï–î–ê üèÜ"
            subtitle = "GLORIA ROMAE"
            message = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –¥–æ—Å—Ç–æ–π–Ω—ã–π –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω –†–∏–º–∞!\n\n–í—ã –Ω–∞–∫–æ–ø–∏–ª–∏ {self.game.player.balance:,} –¥–µ–Ω–∞—Ä–∏–µ–≤ –∏ —Å–º–æ–≥–ª–∏ –≤—ã–ø–ª–∞—Ç–∏—Ç—å\n–¥–æ–ª–≥ –≤–ª–∏—è—Ç–µ–ª—å–Ω–æ–º—É –ø–∞—Ç—Ä–∏—Ü–∏—é!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –≤–ª–∞–¥–µ–µ—Ç–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–π –≤–∏–ª–ª–æ–π –Ω–∞ –ø–æ–±–µ—Ä–µ–∂—å–µ –∏\n–º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –∂–∏–∑–Ω—å—é —É–≤–∞–∂–∞–µ–º–æ–≥–æ —Ç–æ—Ä–≥–æ–≤—Ü–∞.\n\nSenatus Populusque Romanus –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—Å!"
            color = "#6b8e23"  # –ó–µ–ª—ë–Ω—ã–π (—É—Å–ø–µ—Ö)
            icon = "üèÜ"
        else:
            # –ü–û–†–ê–ñ–ï–ù–ò–ï
            title = "üíÄ –ò–ì–†–ê –û–ö–û–ù–ß–ï–ù–ê üíÄ"
            subtitle = "INFAMIA ET SERVITUDO"
            message = f"–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!\n\n–í—ã –Ω–µ —Å–º–æ–≥–ª–∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å {self.game.victory_goal:,} –¥–µ–Ω–∞—Ä–∏–µ–≤\n–≤–ª–∏—è—Ç–µ–ª—å–Ω–æ–º—É –ø–∞—Ç—Ä–∏—Ü–∏—é.\n\n–í–∞—à –∏—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {self.game.player.balance:,} –¥–µ–Ω–∞—Ä–∏–µ–≤\n\n–í—ã —Å—Ç–∞–ª–∏ —Ä–∞–±–æ–º –∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–æ–ª–≥ –≥–æ–¥–∞–º–∏.\n–§–æ—Ä—Ç—É–Ω–∞ –æ—Ç–≤–µ—Ä–Ω—É–ª–∞—Å—å –æ—Ç –≤–∞—Å..."
            color = "#cd5c5c"  # –ö—Ä–∞—Å–Ω–æ–≤–∞—Ç—ã–π (–æ–ø–∞—Å–Ω–æ—Å—Ç—å)
            icon = "üíÄ"
        
        # –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Ö–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        header_frame = ctk.CTkFrame(
            main_frame,
            fg_color=RomanTheme.BACKGROUND,
            height=100
        )
        header_frame.pack(fill="x", padx=50, pady=(30, 0))
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ (–∫—Ä—É–ø–Ω—ã–π)
        title_label = ctk.CTkLabel(
            header_frame,
            text=title,
            font=("Georgia", 52, "bold"),
            text_color=color
        )
        title_label.pack(pady=(10, 5))
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –ª–∞—Ç—ã–Ω–∏
        latin_label = ctk.CTkLabel(
            header_frame,
            text=subtitle,
            font=("Georgia", 32, "italic"),
            text_color=RomanTheme.ACCENT
        )
        latin_label.pack(pady=(0, 10))
        
        # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        separator = ctk.CTkFrame(
            main_frame,
            height=3,
            fg_color=color,
            corner_radius=0
        )
        separator.pack(fill="x", padx=150, pady=(5, 20))
        
        # –°–æ–∑–¥–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –±–ª–æ–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        message_frame = ctk.CTkFrame(
            main_frame,
            fg_color="#f8f5f0",  # –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω –¥–ª—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞
            corner_radius=15,
            border_width=2,
            border_color=color
        )
        message_frame.pack(fill="both", expand=True, padx=150, pady=20)
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ
        message_text = ctk.CTkTextbox(
            message_frame,
            fg_color="#f8f5f0",
            text_color="#2d2722",
            font=("Georgia", 24),
            activate_scrollbars=False,
            wrap="word",
            height=300
        )
        message_text.pack(fill="both", expand=True, padx=50, pady=40)
        message_text.insert("1.0", message)
        message_text.configure(state="disabled")  # –î–µ–ª–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats_frame = ctk.CTkFrame(
            main_frame,
            fg_color=RomanTheme.BACKGROUND,
            height=40
        )
        stats_frame.pack(fill="x", padx=150, pady=(0, 20))
        
        stats_label = ctk.CTkLabel(
            stats_frame,
            text=f"{icon} –¶–∏–∫–ª–æ–≤ –ø—Ä–æ—à–ª–æ: {self.game.current_cycle} –∏–∑ {self.game.max_cycles} {icon}",
            font=("Georgia", 20, "bold"),
            text_color=color
        )
        stats_label.pack(pady=10)
        
        # –ö–Ω–æ–ø–∫–∏
        button_frame = ctk.CTkFrame(
            main_frame,
            fg_color=RomanTheme.BACKGROUND
        )
        button_frame.pack(pady=30)
        
        # –ö–Ω–æ–ø–∫–∞ "–ù–æ–≤–∞—è –∏–≥—Ä–∞"
        new_game_button = ctk.CTkButton(
            button_frame,
            text="üéÆ –ù–æ–≤–∞—è –∏–≥—Ä–∞",
            font=RomanTheme.FONT_BUTTON,
            fg_color=RomanTheme.BUTTON,
            hover_color=RomanTheme.BUTTON_HOVER,
            text_color=RomanTheme.BACKGROUND,
            corner_radius=8,
            width=220,
            height=60,
            command=self.show_difficulty_selection
        )
        new_game_button.pack(side="left", padx=15)
        
        # –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        menu_button = ctk.CTkButton(
            button_frame,
            text="üèõÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            font=RomanTheme.FONT_BUTTON,
            fg_color=RomanTheme.NEUTRAL,
            hover_color="#999999",
            text_color=RomanTheme.TEXT,
            corner_radius=8,
            width=220,
            height=60,
            command=self.create_start_screen
        )
        menu_button.pack(side="left", padx=15)
    
    def show_error(self, message: str):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        self.clear_screen()
        
        main_frame = ctk.CTkFrame(
            self.root,
            fg_color=RomanTheme.BACKGROUND,
            corner_radius=0
        )
        main_frame.pack(fill="both", expand=True, padx=20, pady=20)
        self.current_frame = main_frame
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—à–∏–±–∫–∏
        error_label = ctk.CTkLabel(
            main_frame,
            text="‚ö†Ô∏è –û–®–ò–ë–ö–ê ‚ö†Ô∏è",
            font=RomanTheme.FONT_TITLE,
            text_color="red"
        )
        error_label.pack(pady=50)
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        message_label = ctk.CTkLabel(
            main_frame,
            text=message,
            font=RomanTheme.FONT_TEXT,
            text_color=RomanTheme.TEXT,
            justify="center",
            wraplength=800
        )
        message_label.pack(pady=30, expand=True)
        
        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        back_button = ctk.CTkButton(
            main_frame,
            text="‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É",
            font=RomanTheme.FONT_TEXT,
            fg_color=RomanTheme.BUTTON,
            hover_color=RomanTheme.BUTTON_HOVER,
            text_color=RomanTheme.BACKGROUND,
            corner_radius=8,
            width=200,
            height=40,
            command=self.create_start_screen
        )
        back_button.pack(pady=20)
    def exit_game(self):
        """–í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã"""
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º—É–∑—ã–∫—É –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        audio_manager.stop_music()
        self.root.quit()
        self.root.destroy()
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        try:
            self.root.mainloop()
        except KeyboardInterrupt:
            print("\n–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ GUI: {e}")
        finally:
            try:
                self.root.destroy()
            except:
                pass
    
    def create_audio_controls(self, parent):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—É–¥–∏–æ"""
        audio_frame = ctk.CTkFrame(
            parent,
            fg_color=RomanTheme.BACKGROUND,
            border_color=RomanTheme.FRAME_BORDER,
            border_width=1,
            corner_radius=8,
            height=60
        )
        audio_frame.pack(side="bottom", fill="x", padx=10, pady=5)
        audio_frame.pack_propagate(False)
        
        # –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        controls_frame = ctk.CTkFrame(
            audio_frame,
            fg_color=RomanTheme.BACKGROUND
        )
        controls_frame.pack(side="left", padx=10, pady=5)
          # –ö–Ω–æ–ø–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è/–ø–∞—É–∑—ã
        self.play_button = ctk.CTkButton(
            controls_frame,
            text="üéµ" if not audio_manager.is_playing else "‚è∏Ô∏è",
            font=("Arial", 16),
            width=40,
            height=30,
            fg_color=RomanTheme.BUTTON,
            hover_color=RomanTheme.BUTTON_HOVER,
            command=self.toggle_music
        )
        self.play_button.pack(side="left", padx=2)
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–∫–µ
        info_frame = ctk.CTkFrame(
            audio_frame,
            fg_color=RomanTheme.BACKGROUND
        )
        info_frame.pack(side="left", expand=True, fill="x", padx=10, pady=5)
        
        self.track_label = ctk.CTkLabel(
            info_frame,
            text=self.get_track_info(),
            font=("Arial", 12),
            text_color=RomanTheme.TEXT
        )
        self.track_label.pack(expand=True)
        
        # –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - —Ä–µ–≥—É–ª—è—Ç–æ—Ä –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        volume_frame = ctk.CTkFrame(
            audio_frame,
            fg_color=RomanTheme.BACKGROUND
        )
        volume_frame.pack(side="right", padx=10, pady=5)
        
        volume_label = ctk.CTkLabel(
            volume_frame,
            text="üîä",
            font=("Arial", 14),
            text_color=RomanTheme.TEXT
        )
        volume_label.pack(side="left", padx=(0, 5))
        
        self.volume_slider = ctk.CTkSlider(
            volume_frame,
            from_=0,
            to=1,
            number_of_steps=20,
            width=100,
            height=20,
            progress_color=RomanTheme.ACCENT,
            button_color=RomanTheme.BUTTON,
            button_hover_color=RomanTheme.BUTTON_HOVER,
            command=self.change_volume
        )
        self.volume_slider.set(audio_manager.get_volume())
        self.volume_slider.pack(side="left", padx=5)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–∫–µ –∫–∞–∂–¥—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
        self.update_audio_info()
    
    def toggle_music(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏"""
        if audio_manager.is_playing:
            audio_manager.stop_music()
            self.play_button.configure(text="üéµ")
        else:
            audio_manager.start_music()
            self.play_button.configure(text="‚è∏Ô∏è")
  
    
    def change_volume(self, value):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏"""
        audio_manager.set_volume(value)
    
    def get_track_info(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º —Ç—Ä–µ–∫–µ"""
        if not audio_manager.is_enabled:
            return "üéµ –ê—É–¥–∏–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ (pygame –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)"
        
        info = audio_manager.get_playlist_info()
        if info["total_tracks"] == 0:
            return "üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ data/music"
        
        current_track = info["current_track"] or "–ù–µ—Ç —Ç—Ä–µ–∫–∞"
        status = "–ò–≥—Ä–∞–µ—Ç" if info["is_playing"] else "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        return f"üéµ {status}: {current_track} ({info['current_index']}/{info['total_tracks']})"
    def update_audio_info(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–µ–∫–µ"""
        try:
            if hasattr(self, 'track_label') and self.track_label.winfo_exists():
                self.track_label.configure(text=self.get_track_info())
            
            # –ü–ª–∞–Ω–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–∫–Ω–æ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if self.root and self.root.winfo_exists():
                self.root.after(3000, self.update_audio_info)
        except Exception as e:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI –µ—Å–ª–∏ –≤–∏–¥–∂–µ—Ç—ã —É–∂–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω—ã
            pass
  
