"""
–≠–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∏–≥—Ä—ã "–¢–æ—Ä–≥–æ–≤—ã–π –¥–æ–º"
–°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω –ø–æ–¥ –î—Ä–µ–≤–Ω–∏–π –†–∏–º
"""

import customtkinter as ctk
from typing import Callable, Optional


class RomanTheme:
    """–ê–Ω—Ç–∏—á–Ω–∞—è —Ä–∏–º—Å–∫–∞—è —Ç–µ–º–∞ –¥–ª—è GUI"""
    
    # –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
    BACKGROUND = "#f0e5d1"      # –§–æ–Ω (—Ü–≤–µ—Ç –ø–µ—Ä–≥–∞–º–µ–Ω—Ç–∞)
    ACCENT = "#6d6923"          # –ê–∫—Ü–µ–Ω—Ç—ã (–æ–ª–∏–≤–∫–æ–≤—ã–π)
    BUTTON = "#947153"          # –ö–Ω–æ–ø–∫–∏ –∏ –±–æ—Ä–¥—é—Ä—ã (–±—Ä–æ–Ω–∑–∞)
    TEXT = "#372e29"            # –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ (—Ç–µ–º–Ω–æ-–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π)
    NEUTRAL = "#acacac"         # –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞
    BUTTON_HOVER = "#a0815e"    # –ö–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    FRAME_BORDER = "#8b6f47"    # –ë–æ—Ä–¥—é—Ä—ã —Ä–∞–º–æ–∫
    
    # –®—Ä–∏—Ñ—Ç—ã
    FONT_FAMILY = "Georgia"
    FONT_TITLE = ("Georgia", 28, "bold")
    FONT_HEADER = ("Georgia", 20, "bold")
    FONT_TEXT = ("Georgia", 14)
    FONT_BUTTON = ("Georgia", 16, "bold")
    FONT_SMALL = ("Georgia", 12)


class DifficultyScreen(ctk.CTkFrame):
    """–≠–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
    
    def __init__(self, parent, on_difficulty_selected: Callable[[str], None], on_back: Optional[Callable[[], None]] = None):
        super().__init__(
            parent,
            fg_color=RomanTheme.BACKGROUND,
            corner_radius=0
        )
        self.on_difficulty_selected = on_difficulty_selected
        self.on_back = on_back
        
        self.create_widgets()
    
    def create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ —ç–∫—Ä–∞–Ω–∞"""
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
        header_frame = ctk.CTkFrame(
            self,
            fg_color=RomanTheme.BACKGROUND,
            height=150
        )
        header_frame.pack(fill="x", pady=(20, 0))
        header_frame.pack_propagate(False)
        
        title_label = ctk.CTkLabel(
            header_frame,
            text="‚öñÔ∏è –í–´–ë–û–† –£–†–û–í–ù–Ø –°–õ–û–ñ–ù–û–°–¢–ò ‚öñÔ∏è",
            font=RomanTheme.FONT_TITLE,
            text_color=RomanTheme.ACCENT
        )
        title_label.pack(pady=(20, 10))
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∞–Ω—Ç–∏—á–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π
        subtitle_label = ctk.CTkLabel(
            header_frame,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—É—Ç–∏",
            font=RomanTheme.FONT_HEADER,
            text_color=RomanTheme.TEXT
        )
        subtitle_label.pack(pady=(0, 20))
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        scrollable_frame = ctk.CTkScrollableFrame(
            self,
            fg_color=RomanTheme.BACKGROUND,
            scrollbar_button_color=RomanTheme.BUTTON,
            scrollbar_button_hover_color=RomanTheme.BUTTON_HOVER
        )
        scrollable_frame.pack(fill="both", expand=True, padx=50, pady=(10, 10))
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–æ–π –æ–±–ª–∞—Å—Ç–∏
        difficulty_frame = ctk.CTkFrame(
            scrollable_frame,
            fg_color=RomanTheme.BACKGROUND
        )
        difficulty_frame.pack(fill="x", pady=20, padx=20)
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å —Ä–∏–º—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
        difficulties = [
            {
                "name": "üõ°Ô∏è –õ–ï–ì–ö–ò–ô",
                "level": "easy",
                "subtitle": "–ü—É—Ç—å –ù–æ–≤–∏—á–∫–∞",
                "description": "‚Ä¢ –ë–æ–ª—å—à–µ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤\n‚Ä¢ –ú–µ–Ω—å—à–µ —Ä–∏—Å–∫–æ–≤ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö\n‚Ä¢ –ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è\n‚Ä¢ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏–≥—Ä—ã",
                "latin": "Via Facilior"
            },
            {
                "name": "‚öîÔ∏è –°–†–ï–î–ù–ò–ô", 
                "level": "normal",
                "subtitle": "–ü—É—Ç—å –¢–æ—Ä–≥–æ–≤—Ü–∞",
                "description": "‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –±–∞–ª–∞–Ω—Å —Ä–µ—Å—É—Ä—Å–æ–≤\n‚Ä¢ –£–º–µ—Ä–µ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏ –∏ –Ω–∞–≥—Ä–∞–¥—ã\n‚Ä¢ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏–≥—Ä–æ–≤–æ–π –æ–ø—ã—Ç\n‚Ä¢ –î–ª—è –æ–ø—ã—Ç–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–æ–≤",
                "latin": "Via Mercatoris"
            },
            {
                "name": "üî• –°–õ–û–ñ–ù–´–ô",
                "level": "hard", 
                "subtitle": "–ü—É—Ç—å –ò–º–ø–µ—Ä–∞—Ç–æ—Ä–∞",
                "description": "‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã\n‚Ä¢ –í—ã—Å–æ–∫–∏–µ —Ä–∏—Å–∫–∏, –±–æ–ª—å—à–∏–µ –Ω–∞–≥—Ä–∞–¥—ã\n‚Ä¢ –°—É—Ä–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏\n‚Ä¢ –¢–æ–ª—å–∫–æ –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤",
                "latin": "Via Imperatoris"
            }
        ]
          # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        for i, diff in enumerate(difficulties):
            self.create_difficulty_card(difficulty_frame, diff, i)
        
        # –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥ –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–º —Ç–µ–∫—Å—Ç–æ–º (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)
        bottom_frame = ctk.CTkFrame(
            self,
            fg_color=RomanTheme.BACKGROUND,
            height=100
        )
        bottom_frame.pack(side="bottom", fill="x", pady=10)
        bottom_frame.pack_propagate(False)
        
        # –ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π —Ç–µ–∫—Å—Ç
        motivation_label = ctk.CTkLabel(
            bottom_frame,
            text="\"Audentes fortuna iuvat\" ‚Äî –§–æ—Ä—Ç—É–Ω–∞ –±–ª–∞–≥–æ–≤–æ–ª–∏—Ç —Å–º–µ–ª—ã–º",
            font=RomanTheme.FONT_SMALL,
            text_color=RomanTheme.NEUTRAL,
            justify="center"
        )
        motivation_label.pack(pady=(10, 5))
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ (–µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω callback)
        if self.on_back:
            back_button = ctk.CTkButton(
                bottom_frame,
                text="‚Üê –ù–∞–∑–∞–¥",
                font=RomanTheme.FONT_TEXT,
                fg_color=RomanTheme.NEUTRAL,
                hover_color="#999999",
                text_color=RomanTheme.TEXT,
                corner_radius=8,
                width=120,
                height=40,
                command=self.on_back
            )
            back_button.pack(pady=(0, 10))
    def create_difficulty_card(self, parent, difficulty_data: dict, index: int):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –±—Ä–æ–Ω–∑–æ–≤–æ–π —Ä–∞–º–∫–æ–π
        card_frame = ctk.CTkFrame(
            parent,
            fg_color=RomanTheme.BACKGROUND,
            border_color=RomanTheme.FRAME_BORDER,
            border_width=3,
            corner_radius=15
        )
        card_frame.pack(pady=15, padx=20, fill="x")
        
        # –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –ª–∞—Ç–∏–Ω—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º
        header_frame = ctk.CTkFrame(
            card_frame,
            fg_color=RomanTheme.BACKGROUND
        )
        header_frame.pack(fill="x", padx=15, pady=(15, 8))
        
        # –ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è
        name_label = ctk.CTkLabel(
            header_frame,
            text=difficulty_data["name"],
            font=("Georgia", 18, "bold"),
            text_color=RomanTheme.ACCENT
        )
        name_label.pack()
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle_label = ctk.CTkLabel(
            header_frame,
            text=difficulty_data["subtitle"],
            font=("Georgia", 15),
            text_color=RomanTheme.TEXT
        )
        subtitle_label.pack(pady=(3, 0))
        
        # –õ–∞—Ç–∏–Ω—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
        latin_label = ctk.CTkLabel(
            header_frame,
            text=f"({difficulty_data['latin']})",
            font=("Georgia", 11, "italic"),
            text_color=RomanTheme.NEUTRAL
        )
        latin_label.pack(pady=(2, 0))
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
        description_frame = ctk.CTkFrame(
            card_frame,
            fg_color=RomanTheme.BACKGROUND
        )
        description_frame.pack(fill="x", padx=15, pady=8)
        
        description_label = ctk.CTkLabel(
            description_frame,
            text=difficulty_data["description"],
            font=("Georgia", 13),
            text_color=RomanTheme.TEXT,
            justify="left"
        )
        description_label.pack(pady=8)
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞
        select_button = ctk.CTkButton(
            card_frame,
            text=f"–í–´–ë–†–ê–¢–¨ {difficulty_data['subtitle'].upper()}",
            font=("Georgia", 15, "bold"),
            fg_color=RomanTheme.BUTTON,
            hover_color=RomanTheme.BUTTON_HOVER,
            border_color=RomanTheme.FRAME_BORDER,
            border_width=2,
            text_color=RomanTheme.BACKGROUND,
            corner_radius=10,
            width=250,
            height=45,
            command=lambda level=difficulty_data["level"]: self.select_difficulty(level)
        )
        select_button.pack(pady=(8, 15))
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ –≤—Å—é –∫–∞—Ä—Ç–æ—á–∫—É
        self.add_card_hover_effect(card_frame, select_button)
    
    def add_card_hover_effect(self, card_frame, button):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É"""
        original_border_color = card_frame.cget("border_color")
        
        def on_enter(event):
            card_frame.configure(border_color=RomanTheme.ACCENT)
        
        def on_leave(event):
            card_frame.configure(border_color=original_border_color)
        
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∫ —Ñ—Ä–µ–π–º—É –∫–∞—Ä—Ç–æ—á–∫–∏
        card_frame.bind("<Enter>", on_enter)
        card_frame.bind("<Leave>", on_leave)
        
        # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –¥–æ—á–µ—Ä–Ω–∏–º –≤–∏–¥–∂–µ—Ç–∞–º
        def bind_to_children(widget):
            widget.bind("<Enter>", on_enter)
            widget.bind("<Leave>", on_leave)
            for child in widget.winfo_children():
                try:
                    bind_to_children(child)
                except:
                    pass
        
        bind_to_children(card_frame)
    
    def select_difficulty(self, difficulty: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        self.on_difficulty_selected(difficulty)


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    def test_difficulty_selected(difficulty):
        print(f"–í—ã–±—Ä–∞–Ω —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: {difficulty}")
    
    def test_back():
        print("–í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ
    ctk.set_appearance_mode("light")
    root = ctk.CTk()
    root.title("–¢–µ—Å—Ç —ç–∫—Ä–∞–Ω–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
    root.geometry("1000x700")  # –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    root.configure(fg_color=RomanTheme.BACKGROUND)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω
    screen = DifficultyScreen(
        parent=root,
        on_difficulty_selected=test_difficulty_selected,
        on_back=test_back
    )
    screen.pack(fill="both", expand=True)
    
    root.mainloop()
