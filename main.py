"""
–¢–æ—Ä–≥–æ–≤—ã–π –î–æ–º - –ò–≥—Ä–∞ –æ —Ç–æ—Ä–≥–æ–≤–ª–µ –≤ –î—Ä–µ–≤–Ω–µ–º –†–∏–º–µ

–ó–∞–ø—É—Å–∫:
    python main.py          # GUI –≤–µ—Ä—Å–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    python main.py gui      # GUI –≤–µ—Ä—Å–∏—è
    python main.py cli      # CLI –≤–µ—Ä—Å–∏—è
"""

import os
import sys
from core.world import load_balance_config, generate_world
from core.goods import load_goods
from models.player import Player
from models.courier import Courier
from models.wagon import Wagon
from core.game import Game
from ui.cli import show_main_menu, select_difficulty


def load_game_config(difficulty: str) -> dict:
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å —É—á–µ—Ç–æ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
    config_path = "data/balance_config.json"
    if not os.path.exists(config_path):
        config_path = "balance_config.json"

    try:
        config = load_balance_config(path=config_path, difficulty=difficulty)

        if "player" not in config:
            print("–û—à–∏–±–∫–∞: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞–∑–¥–µ–ª–∞ 'player'")
            raise RuntimeError("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–∞–∑–¥–µ–ª 'player' –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")

        return config
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: {str(e)}")
        raise


def create_player(config: dict, difficulty: str) -> Player:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ —Å —É—á–µ—Ç–æ–º —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–ª–∞–Ω—Å–∞
    starting_balance = config["player"]["starting_balance"]
    if "difficulty_settings" in config and difficulty in config["difficulty_settings"]:
        settings = config["difficulty_settings"][difficulty]
        starting_balance = int(starting_balance * settings.get("starting_balance_multiplier", 1.0))

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—å–µ—Ä–æ–≤
    couriers = []
    for courier_data in config["player"].get("starting_couriers", []):
        illness_resistance = courier_data.get("illness_resistance", 1.0)
        if "difficulty_settings" in config and difficulty in config["difficulty_settings"]:
            settings = config["difficulty_settings"][difficulty]
            illness_resistance *= settings.get("illness_resistance_multiplier", 1.0)

        couriers.append(Courier(
            name=courier_data["name"],
            endurance=courier_data.get("endurance", 0),
            illness_resistance=illness_resistance
        ))

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–≤–æ–∑–æ–∫
    wagons = [
        Wagon(
            name=wagon_data["name"],
            capacity=wagon_data["capacity"],
            durability=wagon_data.get("durability", 0.75)
        ) for wagon_data in config["player"].get("starting_wagons", [])
    ]

    return Player(
        balance=starting_balance,
        couriers=couriers,
        wagons=wagons
    )


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –≤—ã–±–æ—Ä–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    interface = "gui"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é GUI
    
    if len(sys.argv) > 1:
        if sys.argv[1].lower() in ["cli", "console", "terminal"]:
            interface = "cli"
        elif sys.argv[1].lower() in ["gui", "window", "graphical"]:
            interface = "gui"
    
    if interface == "gui":
        # –ó–∞–ø—É—Å–∫ GUI –≤–µ—Ä—Å–∏–∏
        try:
            from ui.gui import TradingHouseGUI
            app = TradingHouseGUI()
            app.run()
        except ImportError as e:
            print("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å GUI. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω customtkinter.")
            print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {e}")
            print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install customtkinter")
            print("–ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ CLI –≤–µ—Ä—Å–∏—é...")
            interface = "cli"
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ GUI: {e}")
            print("–ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ CLI –≤–µ—Ä—Å–∏—é...")
            interface = "cli"
    
    if interface == "cli":
        # –ó–∞–ø—É—Å–∫ CLI –≤–µ—Ä—Å–∏–∏
        run_cli_game()


def run_cli_game():
    """–ó–∞–ø—É—Å–∫ CLI –≤–µ—Ä—Å–∏–∏ –∏–≥—Ä—ã"""
    # –í—ã–±–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ CLI
    difficulty = select_difficulty()

    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        config = load_game_config(difficulty)
    except:
        return

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏—Ä–∞ –∏ —Ç–æ–≤–∞—Ä–æ–≤
    cities = generate_world(config)
    goods = load_goods(config)

    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
    player = create_player(config, difficulty)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
    game = Game(player=player, cities=cities, goods=goods, config=config, difficulty=difficulty)

    # –ó–∞–ø—É—Å–∫ CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    show_main_menu(game)


if __name__ == "__main__":
    print("üèõÔ∏è –¢–æ—Ä–≥–æ–≤—ã–π –î–æ–º - –î—Ä–µ–≤–Ω–∏–π –†–∏–º üèõÔ∏è")
    print("=" * 40)
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã
    if len(sys.argv) == 1:
        print("–ó–∞–ø—É—Å–∫ GUI –≤–µ—Ä—Å–∏–∏...")
        print("–î–ª—è CLI –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python main.py cli")
    
    main()